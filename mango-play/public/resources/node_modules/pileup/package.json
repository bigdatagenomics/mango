{
  "name": "pileup",
  "version": "0.6.8",
  "description": "JavaScript track viewer",
  "keywords": [
    "genome",
    "track",
    "bam",
    "gene",
    "bioinformatics",
    "genomics",
    "sequencing",
    "reads",
    "interactive"
  ],
  "main": "dist/main/pileup.js",
  "browser": "dist/main/pileup.js",
  "files": [
    "dist",
    "style"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/hammerlab/pileup.js.git"
  },
  "scripts": {
    "watch": "./scripts/watch.sh",
    "lint": "./scripts/lint.sh",
    "http-server": "http-server .",
    "test": "./scripts/test.sh",
    "flow": "flow status",
    "flow-check": "flow check",
    "coverage": "./scripts/generate-coverage.sh",
    "build": "./scripts/build.sh",
    "quick-build": "./scripts/quick-build.sh"
  },
  "author": {
    "name": "Dan Vanderkam"
  },
  "contributors": [
    {
      "name": "B. Arman Aksoy",
      "email": "arman@aksoy.org"
    }
  ],
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/hammerlab/pileup.js/issues"
  },
  "homepage": "https://github.com/hammerlab/pileup.js",
  "dependencies": {
    "backbone": "1.1.2",
    "d3": "^3.5.5",
    "data-canvas": ">=0.1.1",
    "jbinary": "^2.1.3",
    "jdataview": "^2.5.0",
    "pako": "^0.2.5",
    "q": "^1.1.2",
    "react": "^0.14.0",
    "react-dom": "^0.14.0",
    "shallow-equals": "0.0.0",
    "underscore": "^1.7.0"
  },
  "devDependencies": {
    "arraybuffer-slice": "^0.1.2",
    "babel": "^5.8.23",
    "babel-core": "^5.8.23",
    "babelify": "^6.3.0",
    "browserify": "^10.2.4",
    "chai": "^2.0.0",
    "coveralls": "2.10.x",
    "envify": "^3.4.0",
    "exorcist": "^0.4.0",
    "flow-bin": "^0.21.0",
    "http-server": "^0.8.0",
    "istanbul": "^0.3.17",
    "jsxhint": "git://github.com/strml/JSXHint.git",
    "lcov-parse": "0.0.9",
    "mocha": "^2.1.0",
    "mocha-lcov-reporter": ">=0.0.2",
    "mocha-phantomjs": "3.5.3",
    "mocha-phantomjs-istanbul": "0.0.2",
    "number-to-locale-string": "^1.0.0",
    "parse-data-uri": "^0.2.0",
    "phantomjs": "1.9.17",
    "react-addons-test-utils": "^0.14.0",
    "sinon": "^1.12.2",
    "smash": "0.0.14",
    "source-map": "^0.3.0",
    "stats.js": "^1.0.0",
    "travis-weigh-in": "^1.0.2",
    "uglify-js": "^2.4.23",
    "uglifyify": "^3.0.1",
    "watchify": "^3.2.1"
  },
  "readme": "[![Build Status](https://travis-ci.org/hammerlab/pileup.js.svg?branch=travis-flow)](https://travis-ci.org/hammerlab/pileup.js) [![Coverage Status](https://coveralls.io/repos/hammerlab/pileup.js/badge.svg?branch=master)](https://coveralls.io/r/hammerlab/pileup.js?branch=master) [![NPM version](http://img.shields.io/npm/v/pileup.svg)](https://www.npmjs.org/package/pileup) [![Dependency Status](https://david-dm.org/hammerlab/pileup.js.svg?theme=shields.io)](https://david-dm.org/hammerlab/pileup.js) [![devDependency Status](https://david-dm.org/hammerlab/pileup.js/dev-status.svg?theme=shields.io)](https://david-dm.org/hammerlab/pileup.js#info=devDependencies) [![DOI](https://zenodo.org/badge/8220/hammerlab/pileup.js.svg)](https://zenodo.org/badge/latestdoi/8220/hammerlab/pileup.js)\n [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/hammerlab/pileup.js?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge) \n\n# pileup.js\npileup.js is an interactive in-browser track viewer. [**Try a demo**][demo]!\n\nIt is built from the ground up to take advantage of the modern JavaScript\necosystem, e.g. ES2015, static type analysis, React.js and Promises. Read more about the motivations behind pileup.js in our [paper][biorxiv].\n\n![pileup.js screenshot](./pileup-screenshot.png)\n\nShowing a structural variant (large deletion):\n![pileup.js showing a large deletion](./pileup-large-deletion.png)\n\n## Usage\n\nTo use pileup.js in a project, install it via NPM:\n\n    npm install --save pileup\n\nAnd then source either `node_modules/pileup/dist/pileup.min.js` or `pileup.js`.\n\nTo create a pileup, use `pileup.create()`. You specify a container DOM element,\nan initial range and a list of tracks:\n\n```javascript\nvar div = document.getElementById('your-id');\nvar p = pileup.create(div, {\n  range: {contig: 'chr17', start: 7512384, stop: 7512544},\n  tracks: [\n    {\n      viz: pileup.viz.genome(),\n      isReference: true,\n      data: pileup.formats.twoBit({\n        url: 'http://www.biodalliance.org/datasets/hg19.2bit'\n      }),\n      name: 'Reference'\n    },\n    {\n      viz: pileup.viz.pileup(),\n      data: pileup.formats.bam({\n        url: '/test-data/synth3.normal.17.7500000-7515000.bam',\n        indexUrl: '/test-data/synth3.normal.17.7500000-7515000.bam.bai'\n      }),\n      cssClass: 'normal',\n      name: 'Alignments'\n    }\n    // ...\n  ]\n});\n```\n\nEach track has a name, a data source and a visualization. See\n[`/examples/playground.js`](/examples/playground.js) for a complete set of\ntrack types.\n\nTo style the track viewer, use CSS! pileup.js uses [flexbox][] for track\nlayout. You can view [this codepen][layout] for a simple demo of the skeleton.\nFor example, to allocate 1/3 of the space to a variant track and 2/3 to a\npileup track, you could use this CSS:\n\n```css\n.track.variants { flex: 1; }\n.track.pileup   { flex: 2; }\n```\n\nTo style multiple tracks of the same type, you can use the `cssClass` property.\n\n## API\n\nThe pileup object returned by `pileup.create` has these methods:\n\n* `setRange`: Update the visible range in the pileup. This takes a\n  `GenomeRange` object, e.g. `{contig: \"chr17\", start: 123, stop: 456}`. The\n  coordinates are 1-based and the range is inclusive on both ends.\n* `getRange`: Returns the currently-visible range. This is a `GenomeRange`\n  object (see description in `setRange`).\n* `destroy`: Tears down the pileup and releases references to allow proper\n  garbage collection.\n\nIf you want to change the set of tracks in a pileup, tear it down and create a\nnew one. The caches are stored on the individual source and visualization\nobjects so, as long as you reuse these, the `destroy` / `create` cycle is\nrelatively cheap and will not incur extra trips to the network.\n\n## Development\n\n## Basic Setup\n\n    git clone https://github.com/hammerlab/pileup.js.git\n    cd pileup.js\n    npm install\n    npm run build\n\nTo play with the demo, start an [http-server][hs]:\n\n    npm run http-server\n\nThen open [http://localhost:8080/examples/index.html](http://localhost:8080/examples/index.html) in your browser of choice.\n\n## Testing\n\nRun the tests from the command line:\n\n    npm run test\n\nRun the tests in a real browser:\n\n    npm run http-server\n    open http://localhost:8080/src/test/runner.html\n\nTo continuously regenerate the combined pileup and test JS, run:\n\n    npm run watch\n\nTo run a single test from the command line, use:\n\n    npm run test -- --grep=pileuputils\n\nTo do the same in the web UI, pass in a `?grep=` URL parameter.\n\nTo typecheck the code, run\n\n    npm run flow\n\nFor best results, use one of the flowtype editor integrations.\n\n## Design\n\nSee [DESIGN.md](/DESIGN.md).\n\nIf you're looking for ideas, see [ROADMAP.md](/ROADMAP.md)\n\n## Releases\n\nTo cut a new release:\n\n- Update `version` in both `package.json` and `pileup.js`. Commit this change.\n- Run `scripts/publish.sh`\n- Run `npm publish`\n- Push to github and tag a release there. Add release notes.\n\n## License\n\npileup.js is [Apache v2](/LICENSE) licensed.\n\n[hs]: https://github.com/nodeapps/http-server\n[layout]: http://codepen.io/anon/pen/VLzbBe?editors=110\n[flexbox]: https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Flexible_boxes\n[demo]: http://www.hammerlab.org/pileup/\n[biorxiv]: http://biorxiv.org/content/early/2016/01/26/036962\n",
  "readmeFilename": "README.md",
  "_id": "pileup@0.6.8",
  "_shasum": "169f1821d84b071bf383f4f0767766b6e826532f",
  "_from": "../../../../mango-cli/src/main/webapp/resources/pileup.js",
  "_resolved": "file:../../../../mango-cli/src/main/webapp/resources/pileup.js"
}
