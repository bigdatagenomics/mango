<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
    <relativePath />
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>org.bdgenomics.mango</groupId>
  <artifactId>mango-parent</artifactId>
  <version>0.0.2-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>mango</name>

  <properties>
    <adam.version>0.24.0</adam.version>
    <avro.version>1.8.1</avro.version>
    <bdg-formats.version>0.11.3</bdg-formats.version>
    <bdg-utils.version>0.2.13</bdg-utils.version>
    <convert.version>0.3.0</convert.version>
    <java.version>1.8</java.version>
    <jetty.version>9.2.17.v20160517</jetty.version>
    <ga4gh.version>0.6.0a10</ga4gh.version>
    <hadoop.version>2.7.3</hadoop.version>
    <hadoop-bam.version>7.9.2</hadoop-bam.version>
    <htsjdk.version>2.9.1</htsjdk.version>
    <parquet.version>1.8.2</parquet.version>
    <scala.version>2.11.12</scala.version>
    <scala.version.prefix>2.11</scala.version.prefix>
    <scalatra.version>2.4.1</scalatra.version>
    <spark.version>2.2.1</spark.version>
    <spark.version.prefix>-spark2_</spark.version.prefix>
    <snappy.version>1.0.5</snappy.version>
    <scoverage.plugin.version>1.1.1</scoverage.plugin.version>
    <protobuf.version>3.0.0-beta-3</protobuf.version>
  </properties>

  <licenses>
    <license>
      <name>Apache License</name>
      <url>https://raw.github.com/bigdatagenomics/mango/master/LICENSE.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:bigdatagenomics/mango.git</connection>
    <developerConnection>scm:git:git@github.com:bigdatagenomics/mango.git</developerConnection>
    <url>scm:git:git@github.com:bigdatagenomics/mango.git</url>
    <tag>HEAD</tag>
  </scm>

  <developers>
    <developer>
      <id>akmorrow13</id>
      <name>Alyssa Morrow</name>
      <email>akmorrow@berkeley.edu</email>
      <organization>U.C. Berkeley, Department of Electrical Engineering and Computer Science</organization>
      <organizationUrl>http://www.cs.berkeley.edu/</organizationUrl>
    </developer>
    <developer>
      <id>erictu</id>
      <name>Eric Tu</name>
      <email>erictu@berkeley.edu</email>
      <organization>U.C. Berkeley, Department of Electrical Engineering and Computer Science</organization>
      <organizationUrl>http://www.cs.berkeley.edu/</organizationUrl>
    </developer>
    <developer>
      <id>fnothaft</id>
      <name>Frank Austin Nothaft</name>
      <email>fnothaft@berkeley.edu</email>
      <url>http://www.fnothaft.net</url>
      <organization>U.C. Berkeley, Department of Electrical Engineering and Computer Science</organization>
      <organizationUrl>http://www.cs.berkeley.edu/</organizationUrl>
    </developer>
    <developer>
      <id>tdanford</id>
      <name>Timothy Danford</name>
      <organization>The GenomeBridge</organization>
    </developer>
    <developer>
      <id>carl</id>
      <name>Carl Yeksigian</name>
      <organization>The GenomeBridge</organization>
    </developer>
  </developers>

  <issueManagement>
    <system>github</system>
    <url>https://github.com/bigdatagenomics/mango/issues</url>
  </issueManagement>

  <build>
    <outputDirectory>target/scala-${scala.version}/classes</outputDirectory>
    <testOutputDirectory>target/scala-${scala.version}/test-classes</testOutputDirectory>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.mycila.maven-license-plugin</groupId>
          <artifactId>maven-license-plugin</artifactId>
          <version>1.10.b1</version>
          <configuration>
            <header>LICENSE_header.txt</header>
            <strictCheck>true</strictCheck>
            <properties>
              <owner>Big Data Genomics Developers</owner>
              <email>adam-developers@googlegroups.com</email>
            </properties>
            <includes>
              <include>**/src/main/scala/**</include>
              <include>**/src/test/scala/**</include>
              <include>**/src/main/java/**</include>
              <include>**/src/test/scala/**</include>
            </includes>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>3.2.2</version>
          <executions>
            <execution>
              <id>scala-compile-first</id>
              <phase>process-resources</phase>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
            <execution>
              <id>scala-test-compile-first</id>
              <phase>process-test-resources</phase>
              <goals>
                <goal>testCompile</goal>
              </goals>
            </execution>
            <execution>
              <id>attach-scaladocs</id>
              <phase>verify</phase>
              <goals>
                <goal>doc-jar</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <scalaVersion>${scala.version}</scalaVersion>
            <useZincServer>true</useZincServer>
            <args>
              <arg>-unchecked</arg>
              <arg>-optimise</arg>
              <arg>-deprecation</arg>
            </args>
            <jvmArgs>
              <jvmArg>-Xms1024m</jvmArg>
              <jvmArg>-Xmx1024m</jvmArg>
            </jvmArgs>
            <javacArgs>
              <javacArg>-source</javacArg>
              <javacArg>${java.version}</javacArg>
              <javacArg>-target</javacArg>
              <javacArg>${java.version}</javacArg>
            </javacArgs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.10.3</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.2</version>
          <configuration>
            <mavenExecutorId>forked-path</mavenExecutorId>
            <useReleaseProfile>false</useReleaseProfile>
            <arguments>-Psonatype-oss-release</arguments>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>1.6</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.5.1</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>2.2.1</version>
          <configuration>
            <gitDescribe>
              <always>true</always>
            </gitDescribe>
            <failOnNoGitDirectory>false</failOnNoGitDirectory>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.4.1</version>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>[3.1.1,)</version>
                    <message>mango requires Maven 3.1.1 or greater</message>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>[1.8,)</version>
                    <message>mango requires Java 1.8 or greater</message>
                  </requireJavaVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.10</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.19.1</version>
          <configuration>
            <skipTests>true</skipTests>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>templating-maven-plugin</artifactId>
          <version>1.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>appassembler-maven-plugin</artifactId>
          <version>1.10</version>
        </plugin>
        <plugin>
          <groupId>org.scalariform</groupId>
          <artifactId>scalariform-maven-plugin</artifactId>
          <version>0.1.4</version>
          <executions>
            <execution>
              <phase>process-sources</phase>
              <goals>
                <goal>format</goal>
              </goals>
              <configuration>
                <alignParameters>true</alignParameters>
                <alignSingleLineCaseStatements>true</alignSingleLineCaseStatements>
                <doubleIndentClassDeclaration>true</doubleIndentClassDeclaration>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.scalatest</groupId>
          <artifactId>scalatest-maven-plugin</artifactId>
          <version>1.0</version>
          <configuration>
            <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
            <junitxml>.</junitxml>
            <filereports>mangoTestSuite.txt</filereports>
            <argLine>-Xmx1024m -Dsun.io.serialization.extendedDebugInfo=true</argLine>
            <stdout>F</stdout>
          </configuration>
          <executions>
            <execution>
              <id>test</id>
              <goals>
                <goal>test</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>com.mycila.maven-license-plugin</groupId>
        <artifactId>maven-license-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.scalariform</groupId>
        <artifactId>scalariform-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>net.fnothaft</groupId>
        <artifactId>ga4gh-format</artifactId>
        <version>0.5.1</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.avro</groupId>
            <artifactId>avro-ipc</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.esotericsoftware.kryo</groupId>
            <artifactId>kryo</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>args4j</groupId>
        <artifactId>args4j</artifactId>
        <version>2.0.31</version>
      </dependency>
      <dependency>
        <groupId>com.esotericsoftware.kryo</groupId>
        <artifactId>kryo</artifactId>
        <version>2.24.0</version>
      </dependency>
      <dependency>
        <groupId>com.github.samtools</groupId>
        <artifactId>htsjdk</artifactId>
        <version>${htsjdk.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-configuration</groupId>
        <artifactId>commons-configuration</artifactId>
        <version>1.10</version>
      </dependency>
      <dependency>
        <groupId>it.unimi.dsi</groupId>
        <artifactId>fastutil</artifactId>
        <version>6.6.5</version>
      </dependency>
      <dependency>
        <groupId>net.liftweb</groupId>
        <artifactId>lift-json_${scala.version.prefix}</artifactId>
        <version>2.6.3</version>
      </dependency>
      <dependency>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro</artifactId>
        <version>${avro.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-client</artifactId>
        <version>${hadoop.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jboss.netty</groupId>
            <artifactId>netty</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>*</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.sonatype.sisu.inject</groupId>
            <artifactId>*</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.parquet</groupId>
        <artifactId>parquet-avro</artifactId>
        <!--
            IMPORTANT NOTE
            ==============
            Spark 2.2.0 bumps to Parquet 1.8.2, but keeps Avro at 1.7.3. This
            causes an issue when using parquet-avro 1.8.2, which relies on a
            method that is new in Avro 1.8.x. The recommended workaround is to
            pin parquet-avro to 1.8.1, instead of 1.8.2, as described in the
            Spark 2.2.0 release notes.
        -->
        <version>1.8.1</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.parquet</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.parquet</groupId>
        <artifactId>parquet-scala_2.10</artifactId>
        <version>${parquet.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql_${scala.version.prefix}</artifactId>
        <version>${spark.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_${scala.version.prefix}</artifactId>
        <version>${spark.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty.orbit</groupId>
            <artifactId>javax.servlet</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-mapreduce</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.adam</groupId>
        <artifactId>adam-apis${spark.version.prefix}${scala.version.prefix}</artifactId>
        <version>${adam.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.adam</groupId>
        <artifactId>adam-cli${spark.version.prefix}${scala.version.prefix}</artifactId>
        <version>${adam.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.bdgenomics.utils</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.adam</groupId>
        <artifactId>adam-core${spark.version.prefix}${scala.version.prefix}</artifactId>
        <version>${adam.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.bdgenomics.utils</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.adam</groupId>
        <artifactId>adam-core${spark.version.prefix}${scala.version.prefix}</artifactId>
        <version>${adam.version}</version>
        <type>test-jar</type>
        <exclusions>
          <exclusion>
            <groupId>org.bdgenomics.utils</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.bdg-formats</groupId>
        <artifactId>bdg-formats</artifactId>
        <version>${bdg-formats.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.utils</groupId>
        <artifactId>utils-cli${spark.version.prefix}${scala.version.prefix}</artifactId>
        <version>${bdg-utils.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.utils</groupId>
        <artifactId>utils-intervalrdd${spark.version.prefix}${scala.version.prefix}</artifactId>
        <version>${bdg-utils.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.utils</groupId>
        <artifactId>utils-io${spark.version.prefix}${scala.version.prefix}</artifactId>
        <version>${bdg-utils.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.utils</groupId>
        <artifactId>utils-metrics${spark.version.prefix}${scala.version.prefix}</artifactId>
        <version>${bdg-utils.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.utils</groupId>
        <artifactId>utils-misc${spark.version.prefix}${scala.version.prefix}</artifactId>
        <version>${bdg-utils.version}</version>
        <type>test-jar</type>
        <exclusions>
          <exclusion>
            <groupId>org.apache.spark</groupId>
            <artifactId>*</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-server</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-webapp</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.seqdoop</groupId>
        <artifactId>hadoop-bam</artifactId>
        <version>${hadoop-bam.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.seqdoop</groupId>
            <artifactId>htsjdk</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest_${scala.version.prefix}</artifactId>
        <version>2.2.6</version>
      </dependency>
      <dependency>
        <groupId>org.scalatra</groupId>
        <artifactId>scalatra_${scala.version.prefix}</artifactId>
        <version>${scalatra.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scalatra</groupId>
        <artifactId>scalatra-scalatest_${scala.version.prefix}</artifactId>
        <version>${scalatra.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scalatra</groupId>
        <artifactId>scalatra-specs2_${scala.version.prefix}</artifactId>
        <version>${scalatra.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scalatra.scalate</groupId>
        <artifactId>scalate-core_${scala.version.prefix}</artifactId>
        <version>1.8.0</version>
      </dependency>
      <dependency>
        <groupId>org.xerial.snappy</groupId>
        <artifactId>snappy-java</artifactId>
        <version>${snappy.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.mango</groupId>
        <artifactId>mango-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.mango</groupId>
        <artifactId>mango-cli</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.bdgenomics.mango</groupId>
        <artifactId>mango-core</artifactId>
        <version>${project.version}</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobuf.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java-util</artifactId>
        <version>${protobuf.version}</version>
      </dependency>
      <dependency>
        <groupId>org.ga4gh</groupId>
        <artifactId>ga4gh-schemas</artifactId>
        <version>${ga4gh.version}</version>
      </dependency>
      <dependency>
      <groupId>org.bdgenomics.convert</groupId>
      <artifactId>convert-ga4gh</artifactId>
      <version>${convert.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.bdgenomics.bdg-formats</groupId>
            <artifactId>bdg-formats</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
      <id>core</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <modules>
        <module>mango-core</module>
        <module>mango-cli</module>
        <module>mango-assembly</module>
      </modules>
    </profile>
    <profile>
      <id>widgets</id>
      <modules>
        <module>mango-viz</module>
      </modules>
    </profile>
    <profile>
      <id>python</id>
      <modules>
        <module>mango-core</module>
        <module>mango-python</module>
        <module>mango-cli</module>
        <module>mango-assembly</module>
      </modules>
    </profile>
    <profile>
      <id>distribution</id>
      <modules>
        <module>mango-core</module>
        <module>mango-cli</module>
        <module>mango-assembly</module>
        <!-- mango-distribution should be last -->
        <module>mango-distribution</module>
      </modules>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>shade</goal>
                </goals>
                <configuration>
                  <relocations>
                    <relocation>
                      <pattern>com.google.protobuf</pattern>
                      <shadedPattern>shaded.com.google.protobuf</shadedPattern>
                    </relocation>
                  </relocations>
                  <filters>
                    <filter>
                      <artifact>*:*</artifact>
                      <excludes>
                        <exclude>META-INF/*.SF</exclude>
                        <exclude>META-INF/*.DSA</exclude>
                        <exclude>META-INF/*.RSA</exclude>
                      </excludes>
                    </filter>
                  </filters>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.0.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <phase>package</phase>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>2.10.4</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <phase>package</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>scala-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>scala-compile-first</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>compile</goal>
                </goals>
                <configuration>
                  <args>
                    <arg>-g:vars</arg>
                  </args>
                </configuration>
              </execution>
              <execution>
                <id>scala-test-compile-first</id>
                <phase>process-test-resources</phase>
                <goals>
                  <goal>testCompile</goal>
                </goals>
              </execution>
              <execution>
                <id>attach-scaladocs</id>
                <phase>package</phase>
                <goals>
                  <goal>doc-jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.scoverage</groupId>
            <artifactId>scoverage-maven-plugin</artifactId>
            <version>${scoverage.plugin.version}</version>
            <configuration>
              <scalaVersion>${scala.version}</scalaVersion>
              <aggregate>true</aggregate>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>coveralls</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.eluder.coveralls</groupId>
            <artifactId>coveralls-maven-plugin</artifactId>
            <version>4.3.0</version>
            <configuration>
              <coberturaReports>
                <param>${project.build.directory}/cobertura.xml</param>
              </coberturaReports>
              <failOnServiceError>false</failOnServiceError>
              <sourceDirectories>
                <param>mango-core/src/main/scala</param>
                <param>mango-cli/src/main/scala</param>
              </sourceDirectories>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!-- Only sign artifacts when we are performing a release, not snapshots -->
    <profile>
      <id>sonatype-oss-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
