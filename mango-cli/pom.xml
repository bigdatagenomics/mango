<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.bdgenomics.mango</groupId>
    <artifactId>mango-parent-spark3_${scala.version.prefix}</artifactId>
    <version>0.0.6-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <artifactId>mango-cli-spark3_${scala.version.prefix}</artifactId>
  <packaging>jar</packaging>
  <name>mango_${scala.version.prefix}: CLI</name>
  <build>
    <plugins>
      <plugin>
        <groupId>nl.geodienstencentrum.maven</groupId>
        <artifactId>sass-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>update-stylesheets</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <resources>
            <resource>
              <!-- Set source and destination dirs -->
              <source>
                <directory>${project.build.directory}/../src/main/webapp/stylesheets</directory>
              </source>
              <destination>${project.build.directory}/../src/main/webapp/stylesheets</destination>
            </resource>
          </resources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <configuration>
          <workingDirectory>${project.build.directory}/../src/main/webapp/resources/</workingDirectory>
        </configuration>
        <executions>
          <execution>
            <id>Run `npm install`</id>
            <phase>prepare-package</phase>
            <configuration>
              <executable>npm</executable> <!-- requires npm to run -->
              <arguments>
                <argument>install</argument>
              </arguments>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/main/scala</source>
              </sources>
            </configuration>
          </execution>
          <execution>
            <id>add-test-source</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/test/scala</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>appassembler-maven-plugin</artifactId>
        <configuration>
          <programs>
            <program>
              <mainClass>org.bdgenomics.mango.cli.VizReads</mainClass>
              <id>mango</id>
            </program>
          </programs>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.scalatest</groupId>
        <artifactId>scalatest-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/webapp</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>net.liftweb</groupId>
      <artifactId>lift-json_${scala.version.prefix}</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-avro</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${scala.version.prefix}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.parquet</groupId>
      <artifactId>parquet-scala_2.10</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${scala.version.prefix}</artifactId>
    </dependency>
    <dependency>
      <groupId>org.bdgenomics.adam</groupId>
      <artifactId>adam-cli${spark.version.prefix}${scala.version.prefix}</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.bdgenomics.adam</groupId>
      <artifactId>adam-core${spark.version.prefix}${scala.version.prefix}</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.bdgenomics.bdg-formats</groupId>
      <artifactId>bdg-formats</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.bdgenomics.utils</groupId>
      <artifactId>utils-cli${spark.version.prefix}${scala.version.prefix}</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.bdgenomics.utils</groupId>
      <artifactId>utils-intervalrdd${spark.version.prefix}${scala.version.prefix}</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.bdgenomics.utils</groupId>
      <artifactId>utils-misc${spark.version.prefix}${scala.version.prefix}</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_${scala.version.prefix}</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatra</groupId>
      <artifactId>scalatra_${scala.version.prefix}</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatra</groupId>
      <artifactId>scalatra-scalatest_${scala.version.prefix}</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatra</groupId>
      <artifactId>scalatra-specs2_${scala.version.prefix}</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatra.scalate</groupId>
      <artifactId>scalate-core_${scala.version.prefix}</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.bdgenomics.mango</groupId>
      <artifactId>mango-core-spark3_${scala.version.prefix}</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>
</project>
