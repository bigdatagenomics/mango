'use strict';function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { 'default': obj };}var _chai = require(


'chai');var _sinon = require(

'sinon');var _sinon2 = _interopRequireDefault(_sinon);var _mainContigInterval = require(

'../../main/ContigInterval');var _mainContigInterval2 = _interopRequireDefault(_mainContigInterval);var _mainSourcesGA4GHDataSource = require(
'../../main/sources/GA4GHDataSource');var _mainSourcesGA4GHDataSource2 = _interopRequireDefault(_mainSourcesGA4GHDataSource);var _mainRemoteFile = require(
'../../main/RemoteFile');var _mainRemoteFile2 = _interopRequireDefault(_mainRemoteFile);

describe('GA4GHDataSource', function () {
  var server = null, response;

  before(function () {
    return new _mainRemoteFile2['default']('/test-data/chr17.1-250.json').getAllString().then(function (data) {
      response = data;
      server = _sinon2['default'].fakeServer.create(); // _after_ we do a real XHR!
    });});


  after(function () {
    server.restore();});


  it('should fetch alignments from a server', function (done) {
    server.respondWith('POST', '/v0.5.1/reads/search', 
    [200, { "Content-Type": "application/json" }, response]);

    var source = _mainSourcesGA4GHDataSource2['default'].create({ 
      endpoint: '/v0.5.1', 
      readGroupId: 'some-group-set:some-read-group', 
      killChr: false });


    var requestInterval = new _mainContigInterval2['default']('chr17', 10, 20);
    (0, _chai.expect)(source.getAlignmentsInRange(requestInterval)).
    to.deep.equal([]);

    var progress = [];
    source.on('networkprogress', function (e) {progress.push(e);});
    source.on('networkdone', function (e) {progress.push('done');});
    source.on('newdata', function () {
      var reads = source.getAlignmentsInRange(requestInterval);
      (0, _chai.expect)(reads).to.have.length(1);
      done();});


    source.rangeChanged({ contig: 'chr17', start: 1, stop: 30 });
    server.respond();});});