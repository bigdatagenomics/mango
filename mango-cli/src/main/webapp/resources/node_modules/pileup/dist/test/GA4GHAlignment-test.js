'use strict';function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { 'default': obj };}var _chai = require(


'chai');var _mainGA4GHAlignment = require(

'../main/GA4GHAlignment');var _mainGA4GHAlignment2 = _interopRequireDefault(_mainGA4GHAlignment);var _mainRemoteFile = require(
'../main/RemoteFile');var _mainRemoteFile2 = _interopRequireDefault(_mainRemoteFile);var _mainDataBam = require(
'../main/data/bam');var _mainDataBam2 = _interopRequireDefault(_mainDataBam);

describe('GA4GHAlignment', function () {
  var sampleAlignments = [];

  before(function () {
    return new _mainRemoteFile2['default']('/test-data/chr17.1-250.json').getAllString().then(function (data) {
      sampleAlignments = JSON.parse(data).alignments;});});



  it('should read the sample alignments', function () {
    (0, _chai.expect)(sampleAlignments).to.have.length(14);});


  it('should provide basic accessors', function () {
    var a = new _mainGA4GHAlignment2['default'](sampleAlignments[0]);
    (0, _chai.expect)(a.name).to.equal('r000');
    (0, _chai.expect)(a.getSequence()).to.equal('ATTTAGCTAC');
    (0, _chai.expect)(a.getQualityScores()).to.deep.equal([32, 32, 32, 32, 32, 32, 32, 32, 32, 32]);
    (0, _chai.expect)(a.getStrand()).to.equal('+');
    (0, _chai.expect)(a.getInterval().toString()).to.equal('chr17:4-13'); // 0-based
    (0, _chai.expect)(a.cigarOps).to.deep.equal([
    { op: 'M', length: 10 }]);

    (0, _chai.expect)(a.getMateProperties()).to.deep.equal({ 
      ref: 'chr17', 
      pos: 79, 
      strand: '+' });});



  it('should match SamRead', function () {
    var bam = new _mainDataBam2['default'](new _mainRemoteFile2['default']('/test-data/chr17.1-250.bam'));
    return bam.readAll().then(function (_ref) {var samReads = _ref.alignments;
      // This is a workaround. See https://github.com/ga4gh/server/issues/488
      samReads.splice(-1, 1);

      (0, _chai.expect)(sampleAlignments.length).to.equal(samReads.length);
      for (var i = 0; i < sampleAlignments.length; i++) {
        var ga4gh = new _mainGA4GHAlignment2['default'](sampleAlignments[i]), 
        bam = samReads[i];
        (0, _chai.expect)(ga4gh.getSequence()).to.equal(bam.getSequence());
        // See https://github.com/ga4gh/server/issues/491
        // expect(ga4gh.getStrand()).to.equal(bam.getStrand());
        // For the if statement, see https://github.com/ga4gh/server/issues/492
        var quality = ga4gh.getQualityScores();
        if (quality.length) {
          (0, _chai.expect)(quality).to.deep.equal(bam.getQualityScores());}

        (0, _chai.expect)(ga4gh.cigarOps).to.deep.equal(bam.cigarOps);
        // After ga4gh#491, change this to a .deep.equal on getMateProperties()
        var ga4ghMate = ga4gh.getMateProperties(), 
        bamMate = bam.getMateProperties();
        (0, _chai.expect)(!!ga4ghMate).to.equal(!!bamMate);
        if (ga4ghMate && bamMate) {
          (0, _chai.expect)(ga4ghMate.ref).to.equal(bamMate.ref);
          (0, _chai.expect)(ga4ghMate.pos).to.equal(bamMate.pos);}}});});});